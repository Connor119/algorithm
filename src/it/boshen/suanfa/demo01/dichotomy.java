package it.boshen.suanfa.demo01;
/*
* 二分查找的时间复杂度是log以2为低的n
*   其意义是砍多少次可以把整个数组砍没
*
*找到数组中大于等于一个数最左侧的位置
*   （这样的二分和通过二分法找一个数的区别就是二分到最后才能停，而找到一个数，那就直到这个数字就停）
*
* 问题：
*       局部最小（对于0位置上来说它比1小，它就是局部最小，对于n-1位置来说，其比n-2小就是局部最小
*       对于其它位置来说，某一个位置i比i-1小比i+1小这就是局部最小）值问题
*       ---在一个数字中arr无序，但是任何两个相邻的数不相等，求一个局部最小的位置（过程好于big0（N））
*
*       分析：1.46min
*
* 一般来说二分在有序数组中做，但是如上问题也可以二分
*
* */
public class dichotomy {

}
